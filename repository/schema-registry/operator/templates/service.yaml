apiVersion: v1
kind: Service
metadata:
  name: schema-registry
spec:
  ports:
  - port: 8081
  selector:
    app: schema-registry
  clusterIP: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sr-pv
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry
  labels:
    app: schema-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schema-registry
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: schema-registry
    spec:
      containers:
      - name: schema-registry
        image: mesosphere/cp-schema-registry:5.3.0
        command: ["/etc/confluent/docker/run"]
        ports:
        - containerPort: 8081
          name: schema-registry
        volumeMounts:
        - name: sr-persistent-storage
          mountPath: /var/lib/schema-registry
        env:
        - name: SCHEMA_REGISTRY_HOST_NAME
          value: {{ .Params.HOST_NAME }}
        - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
          value: "kafka-kafka-0.kafka-svc.default.svc.cluster.local:9093,kafka-kafka-1.kafka-svc.default.svc.cluster.local:9093,kafka-kafka-2.kafka-svc.default.svc.cluster.local:9093"
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          httpGet:
            path: /
            port: 8081
      volumes:
      - name: sr-persistent-storage
        persistentVolumeClaim:
          claimName: sr-pv